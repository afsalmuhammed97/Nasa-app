package com.afsal.dev.nasaapp.repositoryimport androidx.room.withTransactionimport com.afsal.dev.nasaapp.database.PlanteryDatabaseimport com.afsal.dev.nasaapp.helper.Constants.API_KEYimport com.afsal.dev.nasaapp.helper.networkBoundResourceimport com.afsal.dev.nasaapp.network.ApiServiceimport kotlinx.coroutines.delayimport javax.inject.Injectclass AppRepository @Inject constructor( private val apiService: ApiService,                         private val db: PlanteryDatabase) {    private val planeteryDao=db.planeteryDao()suspend fun getPlaneteryData()=apiService.getPlaneteryData(API_KEY,10)    fun getAllPlaneteryData()= networkBoundResource(        query = {            planeteryDao.getAllPlaneteryData()        },        fetch = {//                 delay(2000)            apiService.getPlaneteryData(API_KEY,10)        },//        shouldFetch = {////        },        saveFetchResult = { planeteryResult->            db.withTransaction {                if (planeteryResult.isSuccessful){                    planeteryDao.deleteAllPlaneteryData()                    planeteryResult.body()?.let { planeteryDao.insertPlaneteryData(it) }                }            }        }    )}